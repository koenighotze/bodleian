name: Build

on:
  push:
    branches: [ "**" ]
    tags-ignore: [ "**" ]
  workflow_dispatch:

env:
  TARGET_REGISTRY: "eu.gcr.io/${{ secrets.GCP_PROJECT_ID }}"
  GCP_PROJECT_ID: "${{ secrets.GCP_PROJECT_ID }}"

jobs:
  qa:
    runs-on: ubuntu-20.04

    steps:
      - name: Checking out
        uses: actions/checkout@v2

      - name: Scaning code
        uses: aquasecurity/trivy-action@0.2.1
        with:
          scan-type: "fs"
          ignore-unfixed: true
          format: "table"
          template: "@/contrib/sarif.tpl"
          severity: "MEDIUM,HIGH,CRITICAL"

      - name: Linting Kotlin
        run: mvn detekt:check -Ddetekt.config=detekt.yml

      - name: Detecting secrets
        uses: reviewdog/action-detect-secrets@v0.7
        with:
          reporter: github-check
          github_token: ${{ secrets.github_token }}
          fail_on_error: true
          detect_secrets_flags: --exclude-files .git

      - name: Reviewing shell files
        uses: reviewdog/action-shellcheck@v1.13
        with:
          reporter: github-check
          github_token: ${{ secrets.github_token }}
          exclude: "./.git/*"
          fail_on_error: true

      - name: Reviewing Terraform files
        uses: reviewdog/action-tflint@v1.14
        with:
          reporter: github-check
          github_token: ${{ secrets.github_token }}
          fail_on_error: true

      - name: Reviewing security of Terraform files
        uses: reviewdog/action-tfsec@v1.13
        with:
          reporter: github-check
          github_token: ${{ secrets.github_token }}
          level: info
          fail_on_error: true

      - name: Reviewing yaml files
        uses: reviewdog/action-yamllint@v1.4.0
        with:
          reporter: github-check
          github_token: ${{ secrets.github_token }}
          fail_on_error: true

  test:
    runs-on: ubuntu-20.04

    steps:
      - name: Checking out
        uses: actions/checkout@v2

      - name: Testing
        run: |
          mvn test
          mvn jacoco:report

      - name: Uploading coverage
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          api-token: ${{ secrets.CODACY_API_TOKEN }}
          coverage-reports: ./target/site/jacoco/jacoco.xml
        env:
          CODACY_PROJECT_NAME: "bodleian"
          CODACY_ORGANIZATION_PROVIDER: "gh"
          CODACY_USERNAME: "${{ github.repository_owner }}"

  build-container:
    needs:
      - qa
      - test
    runs-on: ubuntu-20.04

    steps:
      - name: Checking out
        uses: actions/checkout@v2

      - name: Setting up GCP environment
        uses: google-github-actions/setup-gcloud@v0.3
        with:
          project_id: "${{ secrets.GCP_PROJECT_ID }}"
          service_account_key: "${{ secrets.GCP_SA_KEY }}"
          export_default_credentials: true

      - name: Containerizing
        id: containerizing
        run: ./scripts/containerize.sh

      - name: Scaning image tar
        uses: aquasecurity/trivy-action@0.2.1
        with:
          image-ref: "${{ github.event.inputs.image-name || steps.containerizing.outputs.image-name }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          severity: "MEDIUM,HIGH,CRITICAL"
          vuln-type: "os,library"


