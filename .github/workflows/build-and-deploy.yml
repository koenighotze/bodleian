name: Build and deploy

on:
  push:
  workflow_dispatch:

env:
  TARGET_REGISTRY: "eu.gcr.io/${{ secrets.GCP_PROJECT_ID }}"
  GCP_PROJECT_ID: "${{ secrets.GCP_PROJECT_ID }}"

jobs:
  qa:
    runs-on: ubuntu-20.04

    steps:
      - name: Checking out
        uses: actions/checkout@v2

      - name: Linting Kotlin
        run: mvn detekt:check -Ddetekt.config=detekt.yml

      - name: Reviewing markdown files
        uses: reviewdog/action-markdownlint@v0.1
        with:
          reporter: github-check
          github_token: ${{ secrets.github_token }}
          level: warning
          fail_on_error: true

      - name: Detecting secrets
        uses: reviewdog/action-detect-secrets@v0.6.0
        with:
          reporter: github-check
          github_token: ${{ secrets.github_token }}
          fail_on_error: true
          detect_secrets_flags: --exclude-files .git

      - name: Reviewing shell files
        uses: reviewdog/action-shellcheck@v1.7.0
        with:
          reporter: github-check
          github_token: ${{ secrets.github_token }}
          exclude: "./.git/*"
          fail_on_error: true

      - name: Reviewing Terraform files
        uses: reviewdog/action-tflint@v1.13.0
        with:
          reporter: github-check
          github_token: ${{ secrets.github_token }}
          fail_on_error: true

      - name: Reviewing security of Terraform files
        uses: reviewdog/action-tfsec@v1.11.0
        with:
          reporter: github-check
          github_token: ${{ secrets.github_token }}
          level: info
          fail_on_error: true

      - name: Reviewing yaml files
        uses: reviewdog/action-yamllint@v1.4.0
        with:
          reporter: github-check
          github_token: ${{ secrets.github_token }}
          fail_on_error: true

  test:
    runs-on: ubuntu-20.04

    steps:
      - name: Checking out
        uses: actions/checkout@v2

      - name: Testing
        run: |
          mvn test
          mvn jacoco:report

      - name: Uploading coverage
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          api-token: ${{ secrets.CODACY_API_TOKEN }}
          coverage-reports: ./target/site/jacoco/jacoco.xml
        env:
          CODACY_PROJECT_NAME: "bodleian"
          CODACY_ORGANIZATION_PROVIDER: "gh"
          CODACY_USERNAME: "${{ github.repository_owner }}"

  build-container:
    needs:
      - qa
      - test
    runs-on: ubuntu-20.04

    steps:
        - name: Checking out
          uses: actions/checkout@v2

        - name: Building
          run: mvn package

        - name: Setting up Cloud SDK
          uses: google-github-actions/setup-gcloud@v0.2.1
          with:
            project_id: "${{ secrets.GCP_PROJECT_ID }}"
            service_account_key: "${{ secrets.GCR_SA_KEY }}"
            export_default_credentials: true

        - name: Containerizing
          run: ./scripts/containerize.sh

  deploy:
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs:
      - build-container
    runs-on: ubuntu-20.04

    steps:
      - name: Checking out
        uses: actions/checkout@v2

      - name: Setting up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: "${{ secrets.GCP_PROJECT_ID }}"
          service_account_key: "${{ secrets.GCR_SA_KEY }}"
          export_default_credentials: true

      - name: Getting current tag
        id: info
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Deploying to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.6.0
        with:
          image: "$TARGET_REGISTRY/${{ github.repository }}:${{ steps.info.outputs.tag }}"
          service: "bodleian"
          region: "europe-west1"

      - name: Check if service is up
        run: |
          curl -H "Authorization: Bearer $(gcloud auth print-identity-token)" "${{ steps.deploy.outputs.url }}/actuator/health"
